****************************************************
Implicit Attitude Test (IAT)
****************************************************
Last Modified:	03-13-2015 by K. Borchert (katjab@millisecond.com) for Millisecond Software
Copyright ©  03-13-2015 Millisecond Software
modified by Ian Hussey
****************************************************
<values>
/showsummaryfeedback = false
</values>

****************************************************
stimuli
****************************************************

<item attributeAlabel>
/1 = "Luupites"
</item>

<item attributeA>
/ 1 = "meesolup"
/ 2 = "neenolup"
/ 3 = "omellup"
/ 4 = "wenalup"
/ 5 = "turralup"
/ 6 = "loomalup"
</item>

<item attributeBlabel>
/1 = "Niffites"
</item>

<item attributeB>
/ 1 = "cellanif"
/ 2 = "eskannif"
/ 3 = "lebunnif"
/ 4 = "zallanif"
/ 5 = "otrannif"
/ 6 = "borrinif"
</item>

<item targetBlabel>
/1 = "Chinese characters"
</item>

<item targetB>
/1 = "pic1.jpg"
/2 = "pic2.jpg"
/3 = "pic3.jpg"
/4 = "pic4.jpg"
/5 = "pic5.jpg"
/5 = "pic6.jpg"
</item>

<item targetAlabel>
/1 = "Insects"
</item>

<item targetA>
/1 = "insect1.jpg"
/2 = "insect2.jpg"
/3 = "insect3.jpg"
/4 = "insect4.jpg"
/5 = "insect5.jpg"
/6 = "insect6.jpg"
</item>

****************************************************
defaults
****************************************************

<defaults>
/ fontstyle = ("Arial", 3.5%)
/ screencolor = (0,0,0)
/ txbgcolor = (0,0,0)
/ txcolor = (255, 255, 255)
/ minimumversion = "4.0.0.0"
</defaults>

****************************************************
scoring
****************************************************

<values>
/ completed = 0
/ sum1a = 0
/ sum2a = 0
/ sum1b = 0
/ sum2b = 0
/ n1a = 0
/ n2a = 0
/ n1b = 0
/ n2b = 0
/ ss1a = 0
/ ss2a = 0
/ ss1b = 0
/ ss2b = 0
/ magnitude = "unknown"
/ n_correct = 0
</values>

<expressions>
/ m1a = values.sum1a / values.n1a
/ m2a = values.sum2a / values.n2a
/ m1b = values.sum1b / values.n1b
/ m2b = values.sum2b / values.n2b
/ sd1a = sqrt((values.ss1a - (values.n1a * (expressions.m1a * expressions.m1a))) / (values.n1a - 1))
/ sd2a = sqrt((values.ss2a - (values.n2a * (expressions.m2a * expressions.m2a))) / (values.n2a - 1))
/ sd1b = sqrt((values.ss1b - (values.n1b * (expressions.m1b * expressions.m1b))) / (values.n1b - 1))
/ sd2b = sqrt((values.ss2b - (values.n2b * (expressions.m2b * expressions.m2b))) / (values.n2b - 1))
/ sda = sqrt((((values.n1a - 1) * (expressions.sd1a * expressions.sd1a) + (values.n2a - 1) * (expressions.sd2a * expressions.sd2a)) + ((values.n1a + values.n2a) * ((expressions.m1a - expressions.m2a) * (expressions.m1a - expressions.m2a)) / 4) ) / (values.n1a + values.n2a - 1) )
/ sdb = sqrt((((values.n1b - 1) * (expressions.sd1b * expressions.sd1b) + (values.n2b - 1) * (expressions.sd2b * expressions.sd2b)) + ((values.n1b + values.n2b) * ((expressions.m1b - expressions.m2b) * (expressions.m1b - expressions.m2b)) / 4) ) / (values.n1b + values.n2b - 1) )
/ da = (m2a - m1a) / expressions.sda
/ db = (m2b - m1b) / expressions.sdb
/ d = (expressions.da + expressions.db) / 2
/ preferred = "unknown"
/ notpreferred = "unknown"
/ percentcorrect = (values.n_correct/ (values.n1a + values.n1b + values.n2a + values.n2b)) * 100
</expressions>

<data>
/file = "IAT_rawdata.iqdat"
/ columns = [date, time, group, subject, blockcode, blocknum, trialcode, trialnum, response, correct, latency, 
				stimulusnumber, stimulusitem, expressions.da, expressions.db, expressions.d, expressions.percentcorrect ]
/separatefiles = true
</data>

<summarydata >
/file = "IAT_summary.iqdat"
/columns = [script.filename, script.startdate, script.starttime, script.subjectid, script.groupid, script.elapsedtime, values.completed,
expressions.da, expressions.db, expressions.d, expressions.percentcorrect]
</summarydata>

<trial summary>
/ stimulustimes = [0=summary]
/ validresponse = (" ")
/ recorddata = false
/ ontrialbegin = [values.magnitude = "little to no"]
/ ontrialbegin = [if( abs(expressions.d) > 0.15 ) values.magnitude = "a slight"]
/ ontrialbegin = [if( abs(expressions.d) > 0.35 ) values.magnitude = "a moderate"]
/ ontrialbegin = [if( abs(expressions.d) >= 0.65 ) values.magnitude = "a strong"]
/ ontrialbegin = [if(expressions.d >= 0.0) expressions.preferred = item.targetALabel.1]
/ ontrialbegin = [if(expressions.d < 0.0) expressions.preferred = item.targetBLabel.1]
/ ontrialbegin = [if(expressions.d < 0.0) expressions.notpreferred= item.targetALabel.1]
/ ontrialbegin = [if(expressions.d >= 0.0) expressions.notpreferred= item.targetBLabel.1]
</trial>

<text summary>
/ items = ("Your IAT score (D) was <% expressions.d %>, which suggests <% values.magnitude %> automatic preference for <% expressions.preferred %> compared to <% expressions.notpreferred %>.~n~n~nPress the spacebar to complete this session.") 
/ size = (60%, 60%)
/ hjustify = left
 </text>

****************************************************
instructions
****************************************************

<trial instructions>
/ stimulustimes = [1=instructions, spacebar]
/ correctresponse = (" ")
/ errormessage = false
/ recorddata = false
</trial>

<text instructions>
/ items = instructions
/ hjustify = left
/ size = (90%, 60%)
/ position = (50%, 85%)
/ valign = bottom
/ select = sequence
/ resetinterval = 20
</text>

<item instructions>
/ 1 = "
Pictures and words will appear in the middle of the screen. 
These will be pictures of Insects, Chinese characters, and words for two fictional social groups:
Luupiates (meesolup, neenolup, omellup, wenalup, turralup, loomalup) and
Niffites (cellanif, eskannif, lebunnif, zallanif, otrannif, borrinif)

Categorize them using the E key for categories on the left and I key for categories on the right. 

If you make an error, an X will appear - hit the correct key to continue.

GO AS FAST AS YOU CAN while making as few mistakes as possible."
/ 2 = "
See above, the categories have changed."
/ 3 = "
See above, the four categories you saw separately now appear together."
/ 4 = "
Sort the same four categories again."
/ 5 = "
Notice above, there are only two cateogries and they have switched positions."
/ 6 = "
See above, the four categories now appear together in a new configuration."
/ 7 = "
Sort the same four categories again."
</item>

<text spacebar>
/ items = ("Press the SPACE BAR to begin.")
/ position = (50%, 95%)
/ valign = bottom
</text>

<text attributeA>
/ items = attributeA
/ fontstyle = ("Arial", 5%)
/ txcolor = (0, 255, 0)
</text>

<text attributeB>
/ items = attributeB
/ fontstyle = ("Arial", 5%)
/ txcolor = (0, 255, 0)
</text>

<picture targetB>
/ items = targetB
/ size = (20%, 20%)
</picture>

<picture targetA>
/ items = targetA
/ size = (20%, 20%)
</picture>

<text error>
/ position = (50%, 75%)
/ items = ("X")
/ color = (255, 0, 0)
/ fontstyle = ("Arial", 10%, true)
</text>

<text attributeAleft>
/ items = attributeAlabel
/ valign = top
/ halign = left
/ position = (5%, 5%)
/ txcolor = (0, 255, 0)
/ fontstyle = ("Arial", 5%)
</text>

<text attributeBright>
/ items = attributeBlabel
/ valign = top
/ halign = right
/ position = (95%, 5%)
/ txcolor = (0, 255, 0)
/ fontstyle = ("Arial", 5%)
</text>

<text attributeAleftmixed>
/ items = attributeAlabel
/ valign = top
/ halign = left
/ position = (5%, 19%)
/ txcolor = (0, 255, 0)
/ fontstyle = ("Arial", 5%)
</text>

<text attributeBrightmixed>
/ items = attributeBlabel
/ valign = top
/ halign = right
/ position = (95%, 19%)
/ txcolor = (0, 255, 0)
/ fontstyle = ("Arial", 5%)
</text>

<text targetBleft>
/ items = targetBlabel
/ valign = top
/ halign = left	
/ position = (5%, 5%)
/ fontstyle = ("Arial", 5%)
</text>

<text targetBright>
/ items = targetBlabel
/ valign = top
/ halign = right
/ position = (95%, 5%)
/ fontstyle = ("Arial", 5%)
</text>

<text targetAleft>
/ items = targetAlabel
/ valign = top
/ halign = left
/ position = (5%, 5%)
/ fontstyle = ("Arial", 5%)
</text>

<text targetAright>
/ items = targetAlabel
/ valign = top
/ halign = right
/ position = (95%, 5%)
/ fontstyle = ("Arial", 5%)
</text>

<text orleft>
/ items = ("or")
/ valign = top
/ halign = left
/ position = (5%, 12%)
/ fontstyle = ("Arial", 5%)
</text>

<text orright>
/ items = ("or")
/ valign = top
/ halign = right
/ position = (95%, 12%)
/ fontstyle = ("Arial", 5%)
</text>

****************************************************
trials
****************************************************

<trial attributeA>
/ validresponse = ("E", "I")
/ correctresponse = ("E")
/ stimulusframes = [1 = attributeA]
/ posttrialpause = 250
</trial>

<trial attributeB>
/ validresponse = ("E", "I")
/ correctresponse = ("I")
/ stimulusframes = [1 = attributeB]
/ posttrialpause = 250
</trial>


<trial targetBleft>
/ validresponse = ("E", "I")
/ correctresponse = ("E")
/ stimulusframes = [1 = targetB]
/ posttrialpause = 250
</trial>

<trial targetBright>
/ validresponse = ("E", "I")
/ correctresponse = ("I")
/ stimulusframes = [1 = targetB]
/ posttrialpause = 250
</trial>

<trial targetAleft>
/ validresponse = ("E", "I")
/ correctresponse = ("E")
/ stimulusframes = [1 = targetA]
/ posttrialpause = 250
</trial>

<trial targetAright>
/ validresponse = ("E", "I")
/ correctresponse = ("I")
/ stimulusframes = [1 = targetA]
/ posttrialpause = 250
</trial>

****************************************************
blocks
****************************************************

<block attributepractice>
/ bgstim = (attributeAleft, attributeBright)
/ trials = [1=instructions;2-21 = random(attributeA, attributeB)]
/ errormessage = true(error,200)
/ responsemode = correct
</block>

<block targetcompatiblepractice>
/ bgstim = (targetAleft, targetBright)
/ trials = [1=instructions;2-21 = random(targetAleft, targetBright)]
/ errormessage = true(error,200)
/ responsemode = correct
</block>

<block targetincompatiblepractice>
/ bgstim = (targetAright, targetBleft)
/ trials = [1=instructions;2-21 = random(targetAright, targetBleft)]
/ errormessage = true(error,200)
/ responsemode = correct
</block>

<block targetcompatiblepracticeswitch>
/ bgstim = (targetAleft, targetBright)
/ trials = [1=instructions;2-41 = random(targetAleft, targetBright)]
/ errormessage = true(error,200)
/ responsemode = correct
</block>

<block targetincompatiblepracticeswitch>
/ bgstim = (targetAright, targetBleft)
/ trials = [1=instructions;2-41 = random(targetAright, targetBleft)]
/ errormessage = true(error,200)
/ responsemode = correct
</block>

<block compatibletest_iat1>
/ bgstim = (targetAleft, orleft, attributeAleftmixed, targetBright, orright, attributeBrightmixed)
/ trials = [1=instructions;
  3,5,7,9,11,13,15,17,19,21= random(targetAleft, targetBright);
  2,4,6,8,10,12,14,16,18,20 = random(attributeA, attributeB)]
/ errormessage = true(error,200)
/ responsemode = correct
/ ontrialend = [if(block.compatibletest_iat1.latency  <= 10000 && block.compatibletest_iat1.currenttrialnumber != 1 ) values.sum1a =  values.sum1a + block.compatibletest_iat1.latency]
/ ontrialend = [if(block.compatibletest_iat1.latency  <= 10000 && block.compatibletest_iat1.currenttrialnumber != 1 ) values.n1a +=  1]
/ ontrialend = [if(block.compatibletest_iat1.latency  <= 10000 && block.compatibletest_iat1.currenttrialnumber != 1 ) values.ss1a =  values.ss1a + (block.compatibletest_iat1.latency * block.compatibletest_iat1.latency)]
/ ontrialend = [if(block.compatibletest_iat1.latency  <= 10000 && block.compatibletest_iat1.currenttrialnumber != 1 ) values.n_correct += block.compatibletest_iat1.correct]
</block>

<block compatibletest_iat2>
/ bgstim = (targetAleft, orleft, attributeAleftmixed, targetBright, orright, attributeBrightmixed)
/ trials = [
  2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40 = random(targetAleft, targetBright);
  1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31,33,35,37,39 = random(attributeA, attributeB)]
/ errormessage = true(error,200)
/ responsemode = correct
/ ontrialend = [if(block.compatibletest_iat2.latency  <= 10000) values.sum1b =  values.sum1b + block.compatibletest_iat2.latency]
/ ontrialend = [if(block.compatibletest_iat2.latency  <= 10000) values.n1b += 1]
/ ontrialend = [if(block.compatibletest_iat2.latency  <= 10000) values.ss1b =  values.ss1b + (block.compatibletest_iat2.latency * block.compatibletest_iat2.latency)]
/ ontrialend = [if(block.compatibletest_iat2.latency  <= 10000) values.n_correct += block.compatibletest_iat2.correct]
</block>

<block incompatibletest_iat1>
/ bgstim = (targetBleft, orleft, attributeAleftmixed, targetAright, orright, attributeBrightmixed)
/ trials = [1=instructions;
  3,5,7,9,11,13,15,17,19,21 = random(targetBleft, targetAright);
  2,4,6,8,10,12,14,16,18,20 = random(attributeA, attributeB)]
/ errormessage = true(error,200)
/ responsemode = correct
/ ontrialend = [if(block.incompatibletest_iat1.latency  <= 10000 && block.incompatibletest_iat1.currenttrialnumber != 1) values.sum2a =  values.sum2a + block.incompatibletest_iat1.latency]
/ ontrialend = [if(block.incompatibletest_iat1.latency  <= 10000 && block.incompatibletest_iat1.currenttrialnumber != 1 ) values.n2a +=  1]
/ ontrialend = [if(block.incompatibletest_iat1.latency  <= 10000 && block.incompatibletest_iat1.currenttrialnumber != 1 ) values.ss2a =  values.ss2a + (block.incompatibletest_iat1.latency * block.incompatibletest_iat1.latency)]
/ ontrialend = [if(block.incompatibletest_iat1.latency  <= 10000 && block.incompatibletest_iat1.currenttrialnumber != 1 ) values.n_correct += block.incompatibletest_iat1.correct]
</block>

<block incompatibletest_iat2>
/ bgstim = (targetBleft, orleft, attributeAleftmixed, targetAright, orright, attributeBrightmixed)
/ trials = [
  2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40 = random(targetBleft, targetAright);
  1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31,33,35,37,39 = random(attributeA, attributeB)]
/ errormessage = true(error,200)
/ responsemode = correct
/ ontrialend = [if(block.incompatibletest_iat2.latency  <= 10000) values.sum2b =  values.sum2b + block.incompatibletest_iat2.latency]
/ ontrialend = [if(block.incompatibletest_iat2.latency  <= 10000) values.n2b +=  1]
/ ontrialend = [if(block.incompatibletest_iat2.latency  <= 10000) values.ss2b =  values.ss2b + (block.incompatibletest_iat2.latency * block.incompatibletest_iat2.latency)]
/ ontrialend = [if(block.incompatibletest_iat2.latency  <= 10000) values.n_correct += block.incompatibletest_iat2.correct]
</block>


<block compatibletest_iatinstructions>
/ bgstim = (targetAleft, orleft, attributeAleftmixed, targetBright, orright, attributeBrightmixed)
/ trials = [1=instructions]
/ recorddata = false
</block>

<block incompatibletest_iatinstructions>
/ bgstim = (targetBleft, orleft, attributeAleftmixed, targetAright, orright, attributeBrightmixed)
/ trials = [1=instructions]
/ recorddata = false
</block>

<block summary>
/skip = [values.showsummaryfeedback == false]
/ trials = [1=summary]
/ recorddata = false
</block>

****************************************************
experiment
****************************************************

<expt >
/ subjects = (1 of 2)
/ groupassignment = groupnumber
/ blocks = [
				1=targetcompatiblepractice; 2=attributepractice; 3=compatibletest_iat1; 4=compatibletest_iatinstructions;
				5=compatibletest_iat2; 6=targetincompatiblepractice; 7=incompatibletest_iat1; 8=incompatibletest_iatinstructions; 
				9=incompatibletest_iat2; 10=summary]
/onexptend = [values.completed = 1]
</expt>

<expt >
/subjects = (2 of 2)
/ groupassignment = groupnumber
/ blocks = [
				1=targetincompatiblepractice; 2=attributepractice; 3=incompatibletest_iat1; 4=incompatibletest_iatinstructions;
				5=incompatibletest_iat2; 6=targetcompatiblepractice; 7=compatibletest_iat1; 8=compatibletest_iatinstructions; 
				9=compatibletest_iat2; 10=summary]
/onexptend = [values.completed = 1]
</expt>

****************************************************
Test Monkey
****************************************************
<monkey>
/ latencydistribution = normal(500, 100)
/ percentcorrect = 90
</monkey>
